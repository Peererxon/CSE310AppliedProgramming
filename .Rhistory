1+1
plo(1,2)
plot(1,2)
x <- heatmap()
x <- airquality
x
x -< head(airquality)
x <- head(airquality)
x
View(x)
plot(x)
peliculas_df
nombre <- c("Shrek", "Shrek 2", "Shrek Tercero", "Shrek: Felices por siempre")
puntuacion <- c(7.9, 7.2, 6.1, 6.3)
posterior_2005 <- c(FALSE, FALSE, TRUE, TRUE)
nombre <- c("Shrek", "Shrek 2", "Shrek Tercero", "Shrek: Felices por siempre")
puntuacion <- c(7.9, 7.2, 6.1, 6.3)
posterior_2005 <- c(FALSE, FALSE, TRUE, TRUE)
nombre <- c("Shrek", "Shrek 2", "Shrek Tercero", "Shrek: Felices por siempre")
puntuacion <- c(7.9, 7.2, 6.1, 6.3)
posterior_2005 <- c(FALSE, FALSE, TRUE, TRUE)
# crear dataframe de vectores
#los vectores deben tener el mismo tamano porque sino cabum cabum
peliculas_df <- data.frame(nombre,
puntuacion,
posterior_2005)
# mostrar dataframe
peliculas_df
# cambiar nombre de dataframe
names(peliculas_df, c("NOMBRES", "PUNTUACIONES", "POSTERIOR_2005"))
# cambiar nombre de dataframe
names(peliculas_df)  <-  c("NOMBRES", "PUNTUACIONES", "POSTERIOR_2005")
# mostrar dataframe (sí, otra vez)
peliculas_df
# seleccionar un elemento del dataframe
peliculas_df[3,4]
# seleccionar un elemento del dataframe
peliculas_df[2,3]
peliculas_df[3, "PUNTUACIONES"]
# seleccionar más de un elemento del dataframe
peliculas_df[c(3,4),c(2,3)]
peliculas_df[c(3,4),c("PUNTUACIONES","POSTERIOR_2005")]
peliculas_df[c(3,4),c("PUNTUACIONES","POSTERIOR_2005")]
peliculas_df[c(3,4),c("PUNTUACIONES","POSTERIOR_2005")]
peliculas_df[c(3,4),c("PUNTUACIONES","POSTERIOR_2005")]
# seleccionar una fila o renglón del dataframe
peliculas_df[,2]
peliculas_df[,"PUNTUACIONES"]
# seleccionar una fila o renglón del dataframe
peliculas_df[2,]
peliculas_df[,"PUNTUACIONES"]
peliculas_df$NOMBRES
# mostrar el dataframe
peliculas_df
# mostrar el indice de la columna de puntuacion con order
indices_mayor_menor <- order(peliculas_df,decreasing = FALSE)
# mostrar el indice de la columna de puntuacion con order
indices_mayor_menor <- order(peliculas_df$PUNTUACIONES)
# funcion order (menor a mayor)
indices_menor_mayor <- order(peliculas_df$PUNTUACIONES, decreasing = TRUE)
# mostrar el dataframe ordenado
peliculas_df[indices_mayor_menor]
peliculas_df[indices_mayor_menor,]
peliculas_df[indices_menor_mayor,]
dataF_ordenado <- peliculas_df[indices_mayor_menor,]
View(dataF_ordenado)
View(peliculas_df)
nombre <- c("Shrek", "Shrek 2", "Shrek Tercero", "Shrek: Felices por siempre")
puntuacion <- c(7.9, 7.2, 6.1, 6.3)
posterior_2005 <- c(FALSE, FALSE, TRUE, TRUE)
# informacion estrenos de peliculas. Ver video --> https://bit.ly/2KDKCJE
warner <- c(20, 20, 16, 17, 17, 22, 17, 18, 19)
disney <- c(11, 13, 11, 8, 12, 11, 12, 8, 10)
fox <- c(18, 15, 15, 15, 16, 17, 15, 13, 11)
vector_titulos <- nombre
matriz_peliculas <- matrix(c(warner, disney, fox),
nrow = 9,
ncol = 3)
peliculas_df <- data.frame(nombre,
puntuacion,
posterior_2005)
vector_titulos
vector_titulos
matriz_peliculas <- matrix(c(warner, disney, fox),
nrow = 9,
ncol = 3)
peliculas_df <- data.frame(nombre,
puntuacion,
posterior_2005)
lista_curso <- list(vector_titulos, matriz_peliculas)
# mostrar lista
lista_curso
# cambiar nombre de dataframe
names(lista_curso) <- c('vector',
'matriz')
# mostrar lista (sí, otra vez)
lista_curso
lista_curso[['vector']]
lista_curso[['vector']][3]
lista_curso[['matriz']][5,3]
lista_curso
# agregar dataframe a lista
lista_curso[['datafame']] <- peliculas_df
# revisar que está el dataframe
lista_curso
# eliminar un elemento de lista
lista_curso[['matriz']][9,]
lista_curso[['matriz']][9,] <- null
lista_curso[['matriz']][9,] <- NULL
# eliminar un elemento de lista
lista_curso[['matriz']][9,1] <- NULL
# eliminar un elemento de lista
lista_curso[['matriz']][9,1]
# eliminar un elemento de lista
lista_curso[['matriz']]
# eliminar un elemento de lista
lista_curso[['vector']]
# eliminar un elemento de lista
lista_curso[['vector']] <- NULL
# revisar que no está el vector
lista_curso
install.packages("ggplot2")
library(ggplot2)
detach("package:ggplot2", unload = TRUE)
help("ggplot2")
install.packages("readxl")
# instalar paquete readxl
library("readxl")
# buscar la ruta del archivo de excel
file.choose()
# cargar paquete readxl
library("readxl")
# buscar la ruta del archivo de excel
file.choose()
# como mirar las hojas de tu excel
excel_sheets(ruta_excell)
# Copiar ruta de la consola y guardar en variable
ruta_excell <- "/Users/andersongil/Downloads/gapminder_importar_a_r.xlsx"
# como mirar las hojas de tu excel
excel_sheets(ruta_excell)
# importar caso ideal
read_excell <- read_excell(ruta_excell)
# importar caso ideal
caso_ideal <- read_excell(ruta_excell)
# importar caso ideal
caso_ideal <- read_excel(ruta_excell)
View(caso_ideal)
# importar caso dificil
final_boss <- read_excel(ruta_excell,
sheet = 'hoja3',
range = 'C7:F17')
# Copiar ruta de la consola y guardar en variable
ruta_excell <- "/Users/andersongil/Downloads/gapminder_importar_a_r.xlsx"
# importar caso medio
caso_medio <- read_excel(ruta_excell,
sheet = 'hoja2')
# importar caso ideal
caso_ideal <- read_excel(ruta_excell)
# como mirar las hojas de tu excel
excel_sheets(ruta_excell)
# importar caso ideal
caso_ideal <- read_excel(ruta_excell)
# importar caso medio
caso_medio <- read_excel(ruta_excell,
sheet = 'hoja2')
# importar caso medio
caso_medio <- read_excel(ruta_excell,
sheet = 'Hoja2')
# importar caso dificil
final_boss <- read_excel(ruta_excell,
sheet = 'Hoja3',
range = 'C7:F17')
View(final_boss)
View(caso_ideal)
View(caso_medio)
View(caso_ideal)
View(caso_medio)
library(readxl)
gapminder_importar_a_r <- read_excel("Downloads/gapminder_importar_a_r.xlsx",
n_max = 20)
View(gapminder_importar_a_r)
pi
mean(c(1,2,3,4))
View(caso_ideal)
year <-
year <-
# graficar utilizando ggplot
ggplot2::qplot(peliculas)
# graficar utilizando ggplot
plot(peliculas)
# graficar utilizando ggplot
pllot(disney,year)
# graficar utilizando ggplot
plot(disney,year)
history()
View(caso_medio)
# asigna los numeros a cada fruta
x <- 9
# asigna los numeros a cada fruta
minumero <- 9
print(ensalada)
ensalada <- (mango + aguacate)
ensalada
ensalada <- mango + aguacate
aguacate = 5
manzana <- 4
ensalada <- mango + aguacate
ensalada = mango + aguacate
ensalada = mango + aguacate
mango = 10
# asigna los numeros a cada fruta
mango = 10
aguacate = 5
ensalada = mango + aguacate
ensalada
mango = 10
aguacate = 5
ensalada = mango + aguacate
ensalada
nombre <- "anderson"
# observa la clase del nombre
class(nombre)
nombre <- "anderson"
# observa la clase del nombre
class(nombre)
# es 1 mayor que 2
1 < 2
# cual es la clase de esto
class(1<2)
# suma nombre con resultado
nombre + resultado
# crea una variable con algún nombre
nombre <- "anderson"
# observa la clase del nombre
class(nombre)
# es 1 mayor que 2
1 < 2
# cual es la clase de esto
class(1<2)
# suma nombre con resultado
nombre + (1<2)
nombre <- "anderson"
# observa la clase del nombre
class(nombre)
# es 1 mayor que 2
resultado <- 1 < 2
# cual es la clase de esto
class(1<2)
# suma nombre con resultado
nombre + (1<2)
# crea una variable con algún nombre
nombre <- "anderson"
# observa la clase del nombre
class(nombre)
# es 1 mayor que 2
resultado <- 1 < 2
# cual es la clase de esto
class(1<2)
# suma nombre con resultado
nombre + (resultado)
length(puntuacion_rafa)
# crea la puntuación de rafa
puntuacion_rafa <- c(10,9,6)
# calcular diferencia entre puntuaciones
puntuacion - puntuacion_rafa
# calcular la longitud del vector
length(puntuacion_rafa)
# calcular el promedio del vector puntuacion
mean(puntuacion)
caracter[3]
caracter[3]
caracter <- c("sherk 1","sherk 2","sherk felices por siempre")
caracter[3]
caracter[c(1,3)]
puntuacion_baja <- puntuacion < 5
puntuacion_baja
puntuacion_baja <- puntuacion < 7
puntuacion_baja
caracter[puntuacion_baja]
warner <- c(20,20,16,17,17,22,18,17,19)
disney <- c(11,13,11,8,12,11,12,8,9)
fox <- c(18,15,15,15,16,17,15,13,11)
# fuente https://www.the-numbers.com/market/
# creando matriz a partir de vectores
peliculas <- c(warner,disney,fox)
peliculas <- matrix(peliculas, ncol = 3, nrow = 9)
# imprimir matriz en consola
peliculas
# agregar nombres de columnas
colnames(peliculas) <-  c("warner","disney","fox")
View(peliculas)
colnames(peliculas) <-  c("warner","disney","fox")
rownames(peliculas) <- c("2010","2011","2012","2013","2014","2015","2016","2017","2019")
peliculas
peliculas - 5
peliculas + peliculas
peliculas * peliculas
peliculas - peliculas
peliculas + peliculas
peliculas
peliculas * peliculas
peliculas - 5
peliculas[3,2]
peliculas['2012','disney']
peliculas[c(3,4),c(2,3)]
peliculas[c(3,4),c('disney','fox')]
peliculas
peliculas[3,2]
peliculas[c(3,4),c(2,3)]
View(peliculas)
View(peliculas)
peliculas
peliculas[3,]
peliculas[3,]
peliculas[,1]
peliculas
peliculas["2012"]
peliculas["2012",]
peliculas[3,]
peliculas[,1]
peliculas
peliculas[,"disney"]
peliculas[,3]
peliculas[,2]
peliculas[,2]
peliculas[,"disney"]
# crear vector de ventas
tallas <- c('m', 'g', 'S', 'S','m', 'M')
# intentar graficar
plot(tallas)
tallas <- c('m', 'g', 'S', 'S','m', 'M')
# intentar graficar
plot(tallas)
setwd("~/Documents/peererxon/byu/CSE310Programming")
tallas <- c('m', 'g', 'S', 'S','m', 'M')
# intentar graficar
plot(tallas)
tallas <- c('m', 'g', 'S', 'S','m', 'M')
# intentar graficar
#plot(tallas)
###################################
# práctica 1: crear factores en R #
###################################
# crear factor de un vector
tallas_factor <- factor(tallas)
# graficar factor
plot(tallas_factor)
# mirar niveles de factor
levels(tallas_factor)
levels(tallas_factor)
tallas_recodificado <- factor(tallas,
levels = c("g","m","M","S"),
labels = c("G","M","M","S"))
tallas_recodificado <- factor(tallas,
levels = c("g","m","M","S"),
labels = c("G","M","M","S"))
plot(tallas_recodificado)
# ordenando niveles (copiar factor anterior)
tallas_ordenado <- factor(
tallas,
ordered = TRUE,
levels = c("S","m","M","g"),
labels = c("S","M","M","G"))
plot(tallas_ordenado)
tallas_ordenado
plot(tallas_ordenado)
# vectores sobre peliculas de Shrek
nombre <- c("Shrek", "Shrek 2", "Shrek Tercero", "Shrek: Felices por siempre")
puntuacion <- c(7.9, 7.2, 6.1, 6.3)
posterior_2005 <- c(FALSE, FALSE, TRUE, TRUE)
#######################################
# práctica 1: crear un dataframe en R #
#######################################
# crear dataframe de vectores
#los vectores deben tener el mismo tamano porque sino cabum cabum
peliculas_df <- data.frame(nombre,
puntuacion,
posterior_2005)
# vectores sobre peliculas de Shrek
nombre <- c("Shrek", "Shrek 2", "Shrek Tercero", "Shrek: Felices por siempre")
puntuacion <- c(7.9, 7.2, 6.1, 6.3)
posterior_2005 <- c(FALSE, FALSE, TRUE, TRUE)
#######################################
# práctica 1: crear un dataframe en R #
#######################################
# crear dataframe de vectores
#los vectores deben tener el mismo tamano porque sino cabum cabum
peliculas_df <- data.frame(nombre,
puntuacion,
posterior_2005)
View(peliculas_df)
View(peliculas_df)
peliculas_df
# cambiar nombre de dataframe
names(peliculas_df)  <-  c("NOMBRES", "PUNTUACIONES", "POSTERIOR_2005")
peliculas_df
peliculas_df[2,3]
peliculas_df[3, "PUNTUACIONES"]
peliculas_df[c(3,4),c(2,3)]
peliculas_df[c(3,4),c("PUNTUACIONES","POSTERIOR_2005")]
peliculas_df[3, "PUNTUACIONES"]
peliculas_df[2,]
peliculas_df[,"PUNTUACIONES"]
peliculas_df$NOMBRES
peliculas_df$POSTERIOR_2005
peliculas_df
peliculas_df[2,]
peliculas_df
peliculas_df
# mostrar el indice de la columna de puntuacion con order
indices_mayor_menor <- order(peliculas_df$PUNTUACIONES)
indices_mayor_menor <- order(peliculas_df$PUNTUACIONES)
indices_mayor_menor
indices_mayor_menor <- order(peliculas_df$PUNTUACIONES)
indices_menor_mayor
indices_menor_mayor <- order(peliculas_df$PUNTUACIONES)
indices_menor_mayor
indices_mayor_menor <- order(peliculas_df$PUNTUACIONES, decreasing = TRUE)
indices_mayor_menor
peliculas_df[indices_mayor_menor,]
dataF_ordenado <- peliculas_df[indices_mayor_menor,]
dataF_ordenado
